{"version":3,"sources":["store/action.js","components/controls/controls.js","components/list-item/list-item.js","app/App.js","reportWebVitals.js","store/reducer.js","mock/tacks.js","index.js"],"names":["ADD_TASK","EDIT_TASK","DELETE_TASK","addTask","id","text","type","payload","editTask","deleteTask","connect","dispatch","addNewTask","bindActionCreators","props","buttonRef","useRef","className","ref","placeholder","onClick","key","current","value","length","Date","getTime","delItem","editItem","useState","isEdit","setIsEdit","inputRef","defaultValue","state","tasks","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","loadTasks","load","namespace","console","log","tasksReducer","action","task","filter","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","save","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAaA,EAAW,WACXC,EAAY,WACZC,EAAc,cAEdC,EAAU,SAACC,EAAIC,GAAL,MAAe,CAClCC,KAAMN,EACNO,QAAS,CACLH,GAAIA,EACJC,KAAMA,KAIDG,EAAW,SAACJ,EAAIC,GAAL,MAAe,CACnCC,KAAML,EACNM,QAAS,CACLH,GAAIA,EACJC,KAAMA,KAIDI,EAAa,SAACL,GAAD,MAAS,CAC/BE,KAAMJ,EACNK,QAAS,CACLH,GAAIA,K,OCOGM,eAAQ,iBAAK,MAND,SAACC,GACxB,MAAO,CACHC,WAAYC,YAAmBV,EAASQ,MAIjCD,EAzBE,SAACI,GACd,IAAMC,EAAYC,iBAAO,MAUzB,OACI,sBAAKC,UAAU,WAAf,UACI,uBAAOC,IAAKH,EAAWE,UAAW,kBAAmBX,KAAK,OAAOa,YAAa,SAC9E,wBAAQC,QAXM,SAAC,GAAU,EAATC,IACjBN,EAAUO,QAAQC,MAAMC,QAAU,KAEjCZ,EADqBE,EAAdF,aACK,IAAIa,MAAQC,UAAWX,EAAUO,QAAQC,OACrDR,EAAUO,QAAQC,MAAQ,KAOMN,UAAW,mBAA3C,0B,QCwCGP,eAAQ,iBAAK,MAPD,SAACC,GACxB,MAAO,CACHgB,QAASd,YAAmBJ,EAAYE,GACxCiB,SAAWf,YAAmBL,EAAUG,MAIjCD,EAtDE,SAAC,GAAmC,IAAlCL,EAAiC,EAAjCA,KAAMD,EAA2B,EAA3BA,GAAIuB,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAAc,EAEpBC,oBAAS,GAFW,mBAEzCC,EAFyC,KAEjCC,EAFiC,KAI1CC,EAAWhB,iBAAO,MAmBxB,OACI,oBAAIC,UAAU,aAAd,SACMa,EASE,qCACI,uBAAOb,UAAW,wCAAyCX,KAAK,OAAOa,YAAa,OAAQD,IAAKc,EAAUC,aAAc5B,IACzH,sBAAKY,UAAU,qBAAf,UACI,wBAAQA,UAAW,4BAA6BG,QAvBxC,WACxBQ,EAASxB,EAAI4B,EAASV,QAAQC,OAC9BQ,GAAU,IAqBM,oBACA,wBAAQd,UAAW,4BAA6BG,QAnBxC,WACxBW,GAAU,IAkBM,0BAZR,qCACI,sBAAMd,UAAW,kBAAjB,SAAqCZ,IACrC,sBAAKY,UAAU,qBAAf,UACI,wBAAQA,UAAW,0BAA2BG,QAvBtC,WACxBW,GAAU,IAsBM,0BACA,wBAAQd,UAAW,4BAA6BG,QApBxC,WACxBO,EAAQvB,IAmBQ,+BCTxB,IAIeM,eAJS,SAACwB,GAAD,MAAY,CAChCC,MAAOD,KAGIxB,EAzBf,SAAaI,GAAQ,IACVqB,EAASrB,EAATqB,MACP,OACI,qBAAKlB,UAAU,MAAf,SACI,sBAAKA,UAAU,UAAf,UACI,oBAAIA,UAAW,cAAf,wBAEA,oBAAIA,UAAU,OAAd,SACKkB,EAAMC,KAAI,SAACC,GACR,OACI,cAAC,EAAD,CAAUhC,KAAMgC,EAAKhC,KAAMD,GAAIiC,EAAKjC,IAASiC,EAAKjC,SAK9D,cAAC,EAAD,YCRDkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCHVQ,EAAYC,eAAK,CAACC,UAAW,cAE7BF,EAAUvB,SACV0B,QAAQC,IAAI,aACZJ,ECRiB,CACjB,CACI3C,GAAI,cACJC,KAAM,UAEV,CACID,GAAI,cACJC,KAAM,UAEV,CACID,GAAI,cACJC,KAAM,YDAd,IA4Be+C,EA5BM,WAAgC,IAA/BlB,EAA8B,uDAAtBa,EAAWM,EAAW,uCAChD,OAAQA,EAAO/C,MACX,KAAKN,EACD,MAAM,GAAN,mBACOkC,GADP,CAEI,CACI9B,GAAIiD,EAAO9C,QAAQH,GACnBC,KAAMgD,EAAO9C,QAAQF,QAIjC,KAAKJ,EACD,OAAO,YAAIiC,GAAOE,KAAI,SAAAkB,GAIlB,OAHGA,EAAKlD,KAAOiD,EAAO9C,QAAQH,KAC1BkD,EAAKjD,KAAOgD,EAAO9C,QAAQF,MAExBiD,KAGf,KAAKpD,EACD,OAAO,YAAIgC,GAAOqB,QAAO,SAAAD,GAAI,OAAIA,EAAKlD,KAAOiD,EAAO9C,QAAQH,MAEhE,QACI,OAAO8B,IEvBbsB,EAAkBC,OAAOC,sCAAwCC,IAEjEC,EAAQC,YACVT,EACAI,EACIM,YACIC,eAAK,CAACd,UAAW,iBAK7Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGNO,SAASC,eAAe,SAM1B9B,M","file":"static/js/main.d118a69d.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK'\r\nexport const EDIT_TASK = 'EDIT_ASK'\r\nexport const DELETE_TASK = 'DELETE_TASK'\r\n\r\nexport const addTask = (id, text) => ({\r\n    type: ADD_TASK,\r\n    payload: {\r\n        id: id,\r\n        text: text\r\n    }\r\n})\r\n\r\nexport const editTask = (id, text) => ({\r\n    type: EDIT_TASK,\r\n    payload: {\r\n        id: id,\r\n        text: text\r\n    }\r\n})\r\n\r\nexport const deleteTask = (id) => ({\r\n    type: DELETE_TASK,\r\n    payload: {\r\n        id: id\r\n    }\r\n})","import React, {useRef} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addTask} from '../../store/action'\r\nimport {bindActionCreators} from 'redux'\r\n\r\nconst Controls = (props) => {\r\n    const buttonRef = useRef(null)\r\n\r\n    const handleAddItem = ({key}) => {\r\n        if(buttonRef.current.value.length >= 3){\r\n            const {addNewTask} = props\r\n            addNewTask((new Date()).getTime(), buttonRef.current.value)\r\n            buttonRef.current.value = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            <input ref={buttonRef} className={'controls__input'} type=\"text\" placeholder={'text'}/>\r\n            <button onClick={handleAddItem} className={'controls__button'}>‚úî</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewTask: bindActionCreators(addTask ,dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(()=>({}), mapDispatchToProps)(Controls)","import React, {useState, useRef} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport {deleteTask, editTask} from '../../store/action'\r\n\r\nconst ListItem = ({text, id, delItem, editItem}) => {\r\n\r\n    const [isEdit, setIsEdit] = useState(false)\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    const handleContentChange = () => {\r\n        setIsEdit(true)\r\n    }\r\n\r\n    const handleContentDelete = () => {\r\n        delItem(id)\r\n    }\r\n\r\n    const handleContentAccept = () => {\r\n        editItem(id, inputRef.current.value)\r\n        setIsEdit(false)\r\n    }\r\n\r\n    const handleContentCancel = () => {\r\n        setIsEdit(false)\r\n    }\r\n\r\n    return(\r\n        <li className=\"list__item\">\r\n            {!isEdit ?\r\n                <>\r\n                    <span className={'list__item-text'}>{text}</span>\r\n                    <div className=\"list__item-control\">\r\n                        <button className={'list__item-control-edit'} onClick={handleContentChange}>üìù</button>\r\n                        <button className={'list__item-control-delete'} onClick={handleContentDelete}>‚ùå</button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <>\r\n                    <input className={'list__item-text list__item-text--edit'} type=\"text\" placeholder={'text'} ref={inputRef} defaultValue={text}/>\r\n                    <div className=\"list__item-control\">\r\n                        <button className={'list__item-control-accept'} onClick={handleContentAccept}>‚úî</button>\r\n                        <button className={'list__item-control-cancel'} onClick={handleContentCancel}>‚ûñ</button>\r\n                    </div>\r\n                </>\r\n\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        delItem: bindActionCreators(deleteTask, dispatch),\r\n        editItem : bindActionCreators(editTask, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(()=>({}), mapDispatchToProps)(ListItem)","import './App.scss';\nimport Controls from \"../components/controls/controls\";\nimport ListItem from \"../components/list-item/list-item\";\nimport { connect } from 'react-redux'\n\nfunction App(props) {\n    const {tasks} = props\n    return (\n        <div className=\"App\">\n            <div className=\"wrapper\">\n                <h2 className={'list-header'}>To Do List</h2>\n\n                <ul className=\"list\">\n                    {tasks.map((item) => {\n                        return (\n                            <ListItem text={item.text} id={item.id} key={item.id}/>\n                        )\n                    })}\n                </ul>\n\n                <Controls/>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    tasks: state\n})\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_TASK, EDIT_TASK, DELETE_TASK} from './action'\r\nimport {tasks} from '../mock/tacks'\r\nimport { load } from \"redux-localstorage-simple\"\r\n\r\nlet loadTasks = load({namespace: 'todo-list'})\r\n\r\nif(!loadTasks.length){\r\n    console.log(\"loadTasks\")\r\n    loadTasks = tasks\r\n}\r\n\r\nconst tasksReducer = (state = loadTasks, action) => {\r\n    switch (action.type) {\r\n        case ADD_TASK: {\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.payload.id,\r\n                    text: action.payload.text\r\n                }\r\n            ]\r\n        }\r\n        case EDIT_TASK: {\r\n            return [...state].map(task => {\r\n                if(task.id === action.payload.id){\r\n                    task.text = action.payload.text\r\n                }\r\n                return task\r\n            })\r\n        }\r\n        case DELETE_TASK: {\r\n            return [...state].filter(task => task.id !== action.payload.id)\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default tasksReducer","export const tasks = [\r\n    {\r\n        id: 1610914296453,\r\n        text: 'Text 1'\r\n    },\r\n    {\r\n        id: 1610914358755,\r\n        text: 'Text 2'\r\n    },\r\n    {\r\n        id: 1610914412227,\r\n        text: 'Text 3'\r\n    }\r\n]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux'\nimport tasksReducer from './store/reducer'\nimport { save } from \"redux-localstorage-simple\"\n\n// const enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    tasksReducer,\n    composeEnhancer(\n        applyMiddleware(\n            save({namespace: 'todo-list'})\n        ),\n    ),\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}